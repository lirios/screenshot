<?xml version="1.0" encoding="UTF-8"?>
<protocol name="greenisland_screenshooter">
  <copyright><![CDATA[
    Copyright (C) 2015 Pier Luigi Fiorini

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 2.1 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
  ]]></copyright>

  <interface name="greenisland_screenshooter" version="1">
    <description summary="dump the contents of an output, a surface or an area to a buffer">
      This interface is used by programs to take a screenshot of an entire
      output, a user-selected area or a specific surface.
      Captured contents are dumped into a ARGB888 buffer allocated by the
      client application.

      The client asks the compositor to capture with one of the capture
      requests. As a result, a greenisland_screenshot object will be created
      and the greenisland_screenshot.ready event will be sent as soon as the
      client binds to the interface.

      Then the client allocates the buffer and provides it to the compositor
      invoking the greenisland_screenshot.capture request.
      The compositor signals that the capture was done with the
      greenisland_screenshot.done event.
    </description>

    <request name="capture_output">
      <description summary="take a screenshot of an entire output">
        Ask the compositor to capture an entire output.
      </description>
      <arg name="id" type="new_id" interface="greenisland_screenshot"/>
      <arg name="output" type="object" interface="wl_output"/>
    </request>

    <request name="capture_active">
      <description summary="take a screenshot of the active window">
        Ask the compositor to take a screenshot of the active window.
      </description>
      <arg name="id" type="new_id" interface="greenisland_screenshot"/>
    </request>

    <request name="capture_surface">
      <description summary="take a screenshot of a surface">
        Ask the compositor to take a screenshot of a surface of a window
        selected by the user.
      </description>
      <arg name="id" type="new_id" interface="greenisland_screenshot"/>
    </request>

    <request name="capture_area">
      <description summary="take a screenshot of an area">
        Ask the compositor to take a screenshot of an area.
        This request starts a user-driven selection of the area that will
        be captured.
      </description>
      <arg name="id" type="new_id" interface="greenisland_screenshot"/>
    </request>
  </interface>

  <interface name="greenisland_screenshot" version="1">
    <description summary="screenshot">
      A screenshot allows a client to perform a capture of an entire output,
      an area selected by a user-driven operation, the active window or a
      specific surface.  Whatever is to be captured is decided by the capture
      request that was called from the greenisland_screenshooter interface.

      The 'ready' event is sent as soon as the client binds to this interface
      and indicates the size of the buffer that needs to be allocated.

      Invoking the 'capture' request triggers the actual capture.
      The 'done' event is sent when the capture is done, at this point the
      client can decide what to do with the buffer (store into a file, display
      to the user, ...).
    </description>

    <request name="destroy" type="destructor">
      <description summary="remove greenisland_screenshot interface">
        This destroys the screenshot object.
      </description>
    </request>

    <request name="capture">
      <description summary="take a screenshot">
        Ask the compositor to take a screenshot and save the contents into
        the buffer.  What is being capture can be either an output, a surface
        or an area that was selected with user interaction, depending on the
        greenisland_screenshooter request that was invoked.
      </description>
      <arg name="buffer" type="object" interface="wl_buffer"/>
    </request>

    <event name="ready">
      <description summary="compositor is ready to capture">
        The ready event is sent when the client binds to the
        greenisland_screenshot interface and reports the size of the buffer
        that the client needs to allocate and the image size.
      </description>
      <arg name="size" type="uint" summary="Buffer size"/>
      <arg name="width" type="int" summary="Captured image width"/>
      <arg name="height" type="int" summary="Captured image height"/>
    </event>

    <event name="done">
      <description summary="emitted when the buffer is filled">
        The done event is sent when the buffer is filled.
      </description>
    </event>
  </interface>
</protocol>
